// Generated by CoffeeScript 1.8.0
var CWebp, DWebp, Wrapper, compile, methods, mixin, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ref = require('./utils'), mixin = _ref.mixin, compile = _ref.compile;

Wrapper = require('./wrapper');

methods = require('./methods');

exports.CWebp = CWebp = (function(_super) {
  __extends(CWebp, _super);

  mixin(CWebp, compile(methods.global));

  mixin(CWebp, compile(methods.cwebp));

  CWebp.bin = 'cwebp';

  CWebp.verbose = false;

  function CWebp(source, bin) {
    if (!(this instanceof CWebp)) {
      return new CWebp(source, bin);
    }
    CWebp.__super__.constructor.apply(this, arguments);
    if (this.constructor.verbose) {
      this._args.v = [];
    }
  }

  return CWebp;

})(Wrapper);

exports.DWebp = DWebp = (function(_super) {
  __extends(DWebp, _super);

  mixin(DWebp, compile(methods.global));

  mixin(DWebp, compile(methods.dwebp));

  DWebp.bin = 'dwebp';

  function DWebp(source, bin) {
    if (!(this instanceof DWebp)) {
      return new DWebp(source, bin);
    }
    DWebp.__super__.constructor.apply(this, arguments);
    this._stdin = true;
  }

  return DWebp;

})(Wrapper);
